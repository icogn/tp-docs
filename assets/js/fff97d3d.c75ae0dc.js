"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4970],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=d(n),p=i,c=m["".concat(s,".").concat(p)]||m[p]||h[p]||o;return n?a.createElement(c,r(r({ref:t},u),{},{components:n})):a.createElement(c,r({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2476:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));n(9960);const o={},r="Rando Seed Versioning",l={unversionedId:"technical-explanations/rando-seed-versioning",id:"technical-explanations/rando-seed-versioning",title:"Rando Seed Versioning",description:"This page describes concerns with the way version compatibility between the Randomizer and the SeedData is currently handled.",source:"@site/docs/technical-explanations/rando-seed-versioning.mdx",sourceDirName:"technical-explanations",slug:"/technical-explanations/rando-seed-versioning",permalink:"/tp-docs/docs/technical-explanations/rando-seed-versioning",draft:!1,editUrl:"https://github.com/icogn/tp-docs/edit/main/website/docs/technical-explanations/rando-seed-versioning.mdx",tags:[],version:"current",frontMatter:{},sidebar:"technicalExplanations",previous:{title:"Rando Seed File Thoughts",permalink:"/tp-docs/docs/technical-explanations/rando-seed-file-thoughts"},next:{title:"Rando SeedInfo ARCP Structure Proposal",permalink:"/tp-docs/docs/technical-explanations/rando-seedInfo-arcp-proposal"}},s={},d=[{value:"Current implementation",id:"current-implementation",level:2},{value:"Suggested implementation",id:"suggested-implementation",level:2},{value:"Example",id:"example",level:3},{value:"Update process",id:"update-process",level:3}],u={toc:d};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"rando-seed-versioning"},"Rando Seed Versioning"),(0,i.kt)("p",null,"This page describes concerns with the way version compatibility between the Randomizer and the SeedData is currently handled.\nIt also proposes an alternative to address these concerns."),(0,i.kt)("h2",{id:"current-implementation"},"Current implementation"),(0,i.kt)("p",null,"Currently, the Randomizer code reads the following values from a header in the SeedData:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minVersion")," - the oldest version of the Randomizer GCI that this SeedData will work with."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion")," - the newest version of the Randomizer GCI that this SeedData will work with.")),(0,i.kt)("p",null,"For example, let's say you were playing version 7.8 of the Randomizer, which is the most up-to-date version of the Randomizer.\nIf a SeedData on the memory card had a ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," of 5.0 and a ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," of 9.192, the Randomizer would conclude the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"I am within the range that this SeedData allows, so I will say that I am able to play this seed".')),(0,i.kt)("p",null,"So you can immediately ask:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How can the SeedData say that the ",(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion")," is 9.192 when the latest Randomizer version is only 7.8?\nHow did it decide the ",(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion"),"?")),(0,i.kt)("p",null,"That is a good question."),(0,i.kt)("p",null,"9.192 is obviously a random value that makes absolutely no sense, but we'll just accept it for now."),(0,i.kt)("p",null,"Let's say we need to make some changes to the format of the SeedData.\nMaybe there is a new important feature, or we found a way to decrease the block count of the SeedData by restructuring."),(0,i.kt)("p",null,"The new SeedData is obviously not going to work with Randomizer v7.8, so we need to set a ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," that is at least 7.9.\nWe still have no idea what the hell is going on with ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion"),", so we'll just let that one stay the same at 9.192."),(0,i.kt)("p",null,"Now we are obviously going to need to create a new version of the Randomizer GCI which knows how to read this new SeedData."),(0,i.kt)("p",null,"The old Randomizer was v7.8, so let's say this new Randomizer version is 7.9."),(0,i.kt)("p",null,"But wait, we can't do that!"),(0,i.kt)("p",null,"If we set it to 7.9, then the old SeedData (5.0 to 9.192) will tell the Randomizer:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"Hey, you know how to understand me. Trust me. I was finalized before you were even a concept in someone\'s head, so I am totally aware of your capabilities."')),(0,i.kt)("p",null,"This is because Version 7.9 is still in the old SeedData's range of 5.0 to 9.192."),(0,i.kt)("p",null,"If the new Randomizer does not support the old format, then we are going to have to set its version to at least 9.193."),(0,i.kt)("p",null,"That is dumb as hell, so let's just set it to 10.0 and move on."),(0,i.kt)("p",null,"But wait!"),(0,i.kt)("p",null,"We need to change the new SeedData to have a ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," that is at least 10.0.\nIn fact, none of the Randomizers which have existed before this point will be able to understand this SeedData, so we actually need to set the ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," to 10.0 to match the new Randomizer version."),(0,i.kt)("p",null,"So now we have a ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," of 10.0 and a ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," of at least 10.0."),(0,i.kt)("p",null,"Let's pick a ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion"),".\nWe're not going to pick something like 11.192 because we determined last time that that was a terrible idea."),(0,i.kt)("p",null,"It looks like we are back at the same question:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How do we decide a SeedData's ",(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion"),"?")),(0,i.kt)("p",null,"Last time we just accepted 9.192 without questioning it, but I have figured it out now:"),(0,i.kt)("p",null,"The answer is that we can predict the future.\nIt is obvious that the ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," should be 10.7."),(0,i.kt)("p",null,"But seriously, how?"),(0,i.kt)("p",null,"And another issue is this:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'We are saying "old SeedData version" and "new SeedData version" in the above text, but wouldn\'t it be nice if we actually had a name for each of them.'),(0,i.kt)("li",{parentName:"ul"},"It's almost like the SeedData should have its own version so we can accurately reference them and keep track of changes to the format over time.")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"But let's pretend we still have hope for the current system.\n9.192 is a strawman!"),(0,i.kt)("p",null,"How about we use the current values in the SeedData at the time of writing:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minVersion")," is 1.0"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion")," is 1.0")),(0,i.kt)("p",null,"So that's pretty cool, because if we ever have to make a change to the Randomizer then we have no hope of supporting these seeds.",(0,i.kt)("br",null),"\n",(0,i.kt)("em",{parentName:"p"},"(We are not going to entertain the idea of making changes to the Randomizer without incrementing its version.)")),(0,i.kt)("p",null,"When asked about compatibility after the first update to the Randomizer:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\"The latest Randomizer (v1.1) adds support for gradients for Link's tunic color!\nI know that it's not a major change, but all of those seeds that you generated and put on your memory card are not going to work if you update your Randomizer version, so I guess figure it out.\n...\nWhat's that?\nOh yeah, this shit is gonna happen every time.\nYou'll get used to it.\"")),(0,i.kt)("p",null,"Following the same pattern because we still have no idea what to do about ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion"),", the new SeedData which works with Randomizer v1.1 will have ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," 1.1 and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," 1.1."),(0,i.kt)("p",null,"Using the same value for both ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," is obviously pretty crappy."),(0,i.kt)("p",null,"That person's SeedData files on their memory card were created before tunic gradients were a thing, so maybe the new Randomizer should still work with them and simply not put gradient colors on the tunic?"),(0,i.kt)("p",null,"Maybe we can adjust it a little.\nWhat if for the new SeedData we instead used:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minVersion")," of 1.0"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion")," of 1.1")),(0,i.kt)("p",null,"After defining the new SeedData format, we can look back through the Randomizer releases until we find the first one which will not work with the new format, and then we can set the ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," based on that."),(0,i.kt)("p",null,"That's actually a pretty okay way of handling ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion"),", but ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," hasn't been the one we've had a problem with this entire time."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Here is probably the least bad way of handling it with the current setup:"),(0,i.kt)("p",null,"Let's look at the following scenario:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The only Randomizer versions in existence are 1.0 and 1.1."),(0,i.kt)("li",{parentName:"ul"},"We are creating a new SeedData format which works with both of these Randomizers.")),(0,i.kt)("p",null,"We can do the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Set ",(0,i.kt)("inlineCode",{parentName:"li"},"minVersion")," to 1.0."),(0,i.kt)("li",{parentName:"ul"},"Set ",(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion")," to 1.999999999 (or the highest minorVersion possible).")),(0,i.kt)("p",null,'So now whenever we need to make a "breaking change" to the SeedData format, we can set the new one to have ',(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," 2.0 and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," 2.999999999."),(0,i.kt)("p",null,"Then we can change the Randomizer from v1.12 or something to v2.0."),(0,i.kt)("p",null,"This will absolutely work, but here are some problems with this appraoch:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We probably don't want to have to increment the major version of the Randomizer that often.\nOr alternatively, we don't want resistance to having to increment the major version of the Randomizer make it so that we are slow to introduce new features into SeedData formats.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'After all, "RANDOMIZER 2.0 GUYS!!!!" is probably something that we want to celebrate.\nSaid differently, we don\'t want to drain that of its meaning optically by forcing frequent major version updates.'))),(0,i.kt)("li",{parentName:"ul"},"We do not have a way to easily refer to different versions of the SeedData format over time and keep track of changes.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"We can describe a SeedData format as ",(0,i.kt)("inlineCode",{parentName:"li"},"minVer1.0-maxVer1.x"),", but then if the next format has those same min and max versions, we are going to have trouble documenting and troubleshooting."))),(0,i.kt)("li",{parentName:"ul"},"This way of who controls whether or not the Randomizer is allowed to support a SeedData file is backwards.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The Randomizer itself should be the one who decides if it can support a file -- not the file which was created before that Randomizer version even existed.")))),(0,i.kt)("h2",{id:"suggested-implementation"},"Suggested implementation"),(0,i.kt)("p",null,"In the SeedData, instead of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minVersion")," - randoVerMajor.randoVerMinor"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxVersion")," - randoVerMajor.randoVerMinor")),(0,i.kt)("p",null,"The suggestion is to have:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version")," - seedDataVerMajor.seedDataVerMinor")),(0,i.kt)("p",null,"And then internally, the Randomizer has the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minSeedDataVersion")," - seedDataVerMajor.seedDataVerMinor (ex: 17.0)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxFullySupportedSeedDataVersion")," - seedDataVerMajor.seedDataVerMinor (ex: 17.5)"),(0,i.kt)("li",{parentName:"ul"},"Implied:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxSeedDataVersion")," - implied by minSeedDataVersion; (min 17.3 would mean all versions of 17 which are at least 17.3)")))),(0,i.kt)("p",null,"From a data perspective, instead of doing ",(0,i.kt)("inlineCode",{parentName:"p"},"minVersion")," u8.u8 and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxVersion")," u8.u8, we do ",(0,i.kt)("inlineCode",{parentName:"p"},"minSeedDataVersion")," u16.u16, and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxFullySupportedSeedDataVersion")," u16.u16."),(0,i.kt)("p",null,"Note that you could theoretically have something like a ",(0,i.kt)("inlineCode",{parentName:"p"},"minSeedDataVersion")," of 12.0 and a ",(0,i.kt)("inlineCode",{parentName:"p"},"maxFullySupportedSeedDataVersion")," of 13.2.\nWe will need to do a SeedData version bump every time sSettings change (more on this later), but that does not necessarily mean that we need to stop supporting older SeedData versions."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"Let's assume we have the following history of Randomizer versions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Randomizer Releases\n\n- Randomizer v1.12\n    Minimum SeedData version is 6.0\n    Maximum fully supported SeedData version is 6.2\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.11\n    Minimum SeedData version is 6.0\n    Maximum fully supported SeedData version is 6.1\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.10\n    Minimum SeedData version is 6.0\n    Maximum fully supported SeedData version is 6.0\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.9\n    Minimum SeedData version is 5.0\n    Maximum fully supported SeedData version is 5.1\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.8\n    Minimum SeedData version is 5.0\n    Maximum fully supported SeedData version is 5.0\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.7\n    Minimum SeedData version is 4.0\n    Maximum fully supported SeedData version is 4.1\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.6\n    Minimum SeedData version is 4.0\n    Maximum fully supported SeedData version is 4.0\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.5\n    Minimum SeedData version is 3.0\n    Maximum fully supported SeedData version is 3.0\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.4\n    Minimum SeedData version is 2.0\n    Maximum fully supported SeedData version is 2.2\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.3\n    Minimum SeedData version is 2.0\n    Maximum fully supported SeedData version is 2.1\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.2\n    Minimum SeedData version is 2.0\n    Maximum fully supported SeedData version is 2.0\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.1\n    Minimum SeedData version is 1.0\n    Maximum fully supported SeedData version is 1.1\n    - Did this\n    - Did that\n    > Assets (5)\n\n- Randomizer v1.0\n    Minimum SeedData version is 1.0\n    Maximum fully supported SeedData version is 1.0\n    - Did this\n    - Did that\n    > Assets (5)\n")),(0,i.kt)("p",null,"The Randomizers could theoretically have a ",(0,i.kt)("inlineCode",{parentName:"p"},"minSeedVersion")," like 3.4, but this would only happen in the following scenario:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"SeedData format bumps from 3.3 to 3.4."),(0,i.kt)("li",{parentName:"ul"},'Randomizer says "you know what, I\'m not going to support 3.0-3.3 even though it would be pretty easy".')),(0,i.kt)("p",null,"We could potentially get away with just saying the Randomizer has a ",(0,i.kt)("inlineCode",{parentName:"p"},"minSeedVersionMajor"),", but it is probably better to be safe than sorry."),(0,i.kt)("p",null,"So using the above table, let's say we have the following scenario:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"As a player, let's say that I am playing on Randomizer v1.11, and the website is currently generating SeedData with version 6.2."),(0,i.kt)("p",null,"When the game shows me a SeedData of version 6.2 as an option to play, it can say something along the lines of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"Hey, this Seed you want to play is version 6.2, so some of the new features may not work.\nYou will want to update your Randomizer version for these features to work."')),(0,i.kt)("p",null,"This is because the maxFullySupportedVersion for Randomizer v1.11 is 6.1."),(0,i.kt)("p",null,"This way, people are nudged/reminded to update to newer versions of the Randomizer, but we do not make things harder on them."),(0,i.kt)("h3",{id:"update-process"},"Update process"),(0,i.kt)("p",null,"Firstly, these things are true when updating the Randomizer version:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Any code change requires a new version number."),(0,i.kt)("li",{parentName:"ul"},"Major version only needs to change at major milestones, so most updates will be minor version bumps."),(0,i.kt)("li",{parentName:"ul"},'The Randomizer version and the SeedData version are independent, meaning the numbers do not line up and they are not meant to (see the table in the above Example section).\nIn fact, we could start making every Randomizer version a string like "Apple" and "Banana", and this wouldn\'t affect the SeedData because the Randomizer reads the SeedData and not the other way around.')),(0,i.kt)("p",null,"If the Randomizer change was a simple bug fix, we do not need to do anything about the SeedData.\nThat new release of the randomizer will have the same ",(0,i.kt)("inlineCode",{parentName:"p"},"minSeedDataVersion")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"maxFullySupportedSeedDataVersion"),"."),(0,i.kt)("p",null,"If it was a Randomizer change that required a SeedData change:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Determine if the SeedData change should be a major or minor version bump.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"To determine if it is a minor bump, we can look back at the oldest Randomizer version which would attempt to load the new SeedData."),(0,i.kt)("li",{parentName:"ul"},"If there are no problems, we can do a minor bump."),(0,i.kt)("li",{parentName:"ul"},"If there would be problems, we need to do a major version bump.")))),(0,i.kt)("p",null,"Another scenario to consider is the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Let's pretend the the CLR0 recoloring stuff has already been merged.\nThis section of the SeedData maps enums to 24-bit colors."),(0,i.kt)("li",{parentName:"ul"},"If we add support to recolor the master sword blade, this would be a new enum in the CLR0 section."),(0,i.kt)("li",{parentName:"ul"},"Based on how this section is written, this would never cause problems with older versions of the Randomizer.\nThey simply would not color the blade."),(0,i.kt)("li",{parentName:"ul"},"However, we still need to do a minor version bump of the SeedData.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'The reason is that a minor version bump will alert the user that "Hey, this SeedData that you want to load may have some unsupported features in it".\nIn this case, the blade would not be recolored even if the SeedData said that it should be, so we want to alert the user of this.\nThat is all we need to do.')))),(0,i.kt)("p",null,"Thinking about it, it is probably safe to do a minor bump only in the following scenario:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The change is related to pSettings (not sSettings)."),(0,i.kt)("li",{parentName:"ul"},"Doing a minor bump would not break the oldest Randomizer which is looking at that major version.")),(0,i.kt)("p",null,"The reason we need to do a major version bump for sSettings is that the sSettings are a critical part of the definition of the playthrough experience, so any that are meant to be supported in the SeedData must be supported for it to be considered playable.\nThis would be very important in the case of races.\nI assume for official races, everyone would be forced to use a specific Randomizer version, but that doesn't necessarily have to be the case for more casual stuff."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Note that we would also keep track of SeedData format changes in the same way that I showed above for the Randomizer version, through probably with more detail.")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"We will probably also want to scan all of the SeedData on the memory card (whether we are still using seedIndexes or not), and let the user know about any which are totally incompatible and why, so that they are not completely lost and have to make a post about it."),(0,i.kt)("p",null,'This might only be feasible in the "seedIndexes are no more" situation though, since that one wouldn\'t have to read the memory card several times.'))}m.isMDXComponent=!0}}]);